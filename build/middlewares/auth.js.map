{"version":3,"sources":["../../src/middlewares/auth.js"],"names":["SECRET_KEY","process","env","verifyUser","req","res","next","bearerHeader","headers","bearer","split","bearerToken","token","sendStatus"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;;;IACOA,U,GAAcC,OAAO,CAACC,G,CAAtBF,U;;AAIA,IAAMG,UAAU,GAAG,SAAbA,UAAa,CAACC,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAkB;AACxC,MAAMC,YAAY,GAAGH,GAAG,CAACI,OAAJ,CAAY,eAAZ,CAArB;;AACA,MAAG,OAAOD,YAAP,KAAwB,WAA3B,EAAwC;AACpC,QAAME,MAAM,GAAGF,YAAY,CAACG,KAAb,CAAmB,GAAnB,CAAf;AACA,QAAMC,WAAW,GAAGF,MAAM,CAAC,CAAD,CAA1B;AACAL,IAAAA,GAAG,CAACQ,KAAJ,GAAYD,WAAZ;AACAL,IAAAA,IAAI;AACP,GALD,MAKM;AACFD,IAAAA,GAAG,CAACQ,UAAJ,CAAe,GAAf;AACH;AACJ,CAVM","sourcesContent":["import jwt from 'jsonwebtoken';\r\nimport {} from 'dotenv/config';\r\nimport {createError} from 'http-errors';\r\nconst {SECRET_KEY} = process.env;\r\n\r\n\r\n\r\nexport const verifyUser = (req, res, next)=>{\r\n    const bearerHeader = req.headers['authorization'];\r\n    if(typeof bearerHeader !== 'undefined') {\r\n        const bearer = bearerHeader.split(' ');\r\n        const bearerToken = bearer[1];\r\n        req.token = bearerToken;\r\n        next();\r\n    } else{\r\n        res.sendStatus(403);\r\n    }\r\n};"],"file":"auth.js"}